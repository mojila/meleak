{"version":3,"sources":["components/miniDrawer.js","components/currentStats.js","components/webAppInfo.js","pages/home.js","pages/about.js","pages/analyze.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","Menu","name","path","icon","MiniDrawer","isOpen","title","classes","useTheme","React","useState","open","setOpen","history","useHistory","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","toolbar","direction","Divider","List","map","menu","index","ListItem","key","button","push","ListItemIcon","ListItemText","primary","root","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","CurrentStats","Card","CardContent","Grid","container","item","md","gutterBottom","CardActions","Button","size","WebAppInfo","component","content","flexGrow","padding","alignItems","justifyContent","mixins","Home","Container","disableGutters","fixed","paragraph","Analyze","App","CssBaseline","basename","About","route","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5238656.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Menu = [\r\n  { name: 'Dashboard', path: '/', icon: <DashboardIcon /> },\r\n  { name: 'Analyze', path: '/analyze', icon: <TimelineIcon /> },\r\n  { name: 'About', path: '/about', icon: <InfoIcon /> },\r\n]\r\n\r\nexport default function MiniDrawer({ isOpen, title }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const history = useHistory()\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const goTo = (path) => {\r\n    history.push(path)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {Menu.map((menu, index) => <ListItem\r\n            key={index} \r\n            button \r\n            onClick={() => goTo(menu.path)}>\r\n            <ListItemIcon>{menu.icon}</ListItemIcon>\r\n            <ListItemText primary={menu.name} />\r\n          </ListItem>)}\r\n        </List>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function CurrentStats() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const goToAnalyze = () => {\r\n    history.push('/analyze')\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item md={12}>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              Current Stats\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={goToAnalyze}>Go to Analyze</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WebAppInfo() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Web Apps Information\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Tokopedia\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          https://www.tokopedia.com\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          \r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Go to app</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { Container, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../components/miniDrawer'\r\nimport CurrentStats from '../components/currentStats'\r\nimport WebAppInfo from '../components/webAppInfo'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const title = \"Dashboard\"\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Grid container spacing={2}>\r\n        <Grid item md={6}>\r\n          <WebAppInfo />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <CurrentStats />\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  </Container>\r\n}","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../components/miniDrawer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const title = \"About\"\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Typography paragraph>\r\n        My Name is Mojila, you can find me at github.com/mojila <br/>\r\n        I build this app for my final project research. so if you interest to join me develop this app, i'll very welcome. <br/>\r\n        &copy; 2020 \r\n      </Typography>\r\n    </main>\r\n  </Container>\r\n}","import React from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../components/miniDrawer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Analyze() {\r\n  const classes = useStyles();\r\n  const title = \"Analyze\"\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      {/* content */}\r\n      <div>blank</div>\r\n    </main>\r\n  </Container>\r\n}","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport Home from './pages/home';\r\nimport About from './pages/about';\r\nimport Analyze from './pages/analyze';\r\n\r\nconst Routes = () => ([\r\n  { component: Home, path: '/' },\r\n  { component: Analyze, path: '/analyze' },\r\n  { component: About, path: '/about' },\r\n])\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline>\r\n        <HashRouter\r\n          basename=\"/\"\r\n        >\r\n          <Switch>\r\n            {Routes().map((route, index) => <Route exact key={index} component={route.component} path={route.path} />)}\r\n          </Switch>\r\n        </HashRouter>\r\n      </CssBaseline>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}