{"version":3,"sources":["context/stores/index.js","context/actions/index.js","context/reducers/index.js","context/index.js","components/miniDrawer.js","components/currentStats.js","components/webAppInfo.js","pages/home.js","pages/about.js","pages/analyze/index.js","helpers/codeAnalyzer.js","components/codeReview.js","pages/analyze/_index.js","App.js","serviceWorker.js","index.js"],"names":["stores","pages","active","info","title","url","leaks","page_leaks","page_scripts","actions","UPDATE_PAGES","UPDATE_ACTIVE","UPDATE_INFO","UPDATE_LEAKS","UPDATE_PAGE_LEAKS","UPDATE_PAGE_SCRIPTS","Reducer","state","action","type","payload","Context","React","createContext","Provider","Stores","Consumer","store","Actions","Reducers","reducer","useStyles","makeStyles","theme","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","Menu","name","path","icon","MiniDrawer","isOpen","classes","useTheme","useState","open","setOpen","history","useHistory","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","toolbar","direction","Divider","List","map","menu","index","ListItem","key","button","push","ListItemIcon","ListItemText","primary","root","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","CurrentStats","useContext","Card","CardContent","Grid","container","item","md","gutterBottom","length","CardActions","Button","size","WebAppInfo","Avatar","alt","src","component","href","target","content","flexGrow","padding","alignItems","justifyContent","mixins","Home","Container","disableGutters","fixed","paragraph","card","Analyze","d","i","URL","pathname","searchVariable","code","results","forEach","value","detectedVariables","match","declarationSyntax","typeData","variables","replace","substring","search","detectVariableName","assignLocation","data","Number","String","detectProblemCode","filteredFromDeclarations","split","declarations","problemSyntax","gex","RegExp","detectSingleDataType","findArrayPush","filter","x","codeAnalyzer","beautifiedCode","CodeReview","scriptNumber","markers","setMarkers","Box","newMarkers","startRow","endRow","mode","height","editorProps","$blockScrolling","rootList","maxWidth","backgroundColor","palette","background","overflow","maxHeight","listSection","ul","DetailAnalyze","useParams","loading","setLoading","selected","setSelected","options","chart","id","series","chartOptions","setChartOptions","pageUrl","formatTime","start","moment","memoryLeak","time","format","stop","useEffect","pageLeaks","page","totalLeaks","subheader","getLeaks","heapData","y","heap","dataLabels","enabled","stroke","curve","annotations","yaxis","y2","borderColor","fillColor","label","text","xaxis","x2","opacity","style","onSelectItem","secondary","pageScripts","scripts","js_beautify","getScripts","App","useReducer","dispatch","loadPages","a","localStorage","getItem","infoKey","JSON","parse","pagesKey","pagesJSON","memoryLeaks","leaksKey","scriptsKey","flat","CssBaseline","basename","About","route","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ba7dff1.chunk.js","sourcesContent":["const stores = {\r\n  pages: [],\r\n  active: '',\r\n  info: {\r\n    title: '',\r\n    url: ''\r\n  },\r\n  leaks: [],\r\n  page_leaks: [],\r\n  page_scripts: []\r\n}\r\n\r\nexport default stores","const actions = {\r\n  UPDATE_PAGES: 'UPDATE_PAGES',\r\n  UPDATE_ACTIVE: 'UPDATE_ACTIVE',\r\n  UPDATE_INFO: 'UPDATE_INFO',\r\n  UPDATE_LEAKS: 'UPDATE_LEAKS',\r\n  UPDATE_PAGE_LEAKS: 'UPDATE_PAGE_LEAKS',\r\n  UPDATE_PAGE_SCRIPTS: 'UPDATE_PAGE_SCRIPTS'\r\n}\r\n\r\nexport default actions","import stores from \"../stores\";\r\nimport actions from \"../actions\";\r\n\r\nconst Reducer = (state = stores, action) => {\r\n  switch (action.type) {\r\n    case actions.UPDATE_PAGES:\r\n      return {\r\n        ...state,\r\n        pages: action.payload.pages\r\n      }\r\n    case actions.UPDATE_ACTIVE:\r\n      return {\r\n        ...state,\r\n        active: action.payload.active\r\n      }\r\n    case actions.UPDATE_INFO:\r\n      return {\r\n        ...state,\r\n        info: action.payload.info\r\n      }\r\n    case actions.UPDATE_LEAKS:\r\n      return {\r\n        ...state,\r\n        leaks: action.payload.leaks\r\n      }\r\n    case actions.UPDATE_PAGE_LEAKS:\r\n      return {\r\n        ...state,\r\n        page_leaks: action.payload.page_leaks\r\n      }\r\n    case actions.UPDATE_PAGE_SCRIPTS:\r\n      return {\r\n        ...state,\r\n        page_scripts: action.payload.page_scripts\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Reducer","import React from 'react'\r\nimport store from './stores'\r\nimport reducer from './reducers'\r\nimport actions from './actions'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport const Provider = Context.Provider\r\nexport const Consumer = Context.Consumer\r\nexport const Stores = store\r\nexport const Actions = actions\r\nexport const Reducers = reducer\r\n\r\nexport default Context\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Menu = [\r\n  { name: 'Dashboard', path: '/', icon: <DashboardIcon /> },\r\n  { name: 'Analyze', path: '/analyze', icon: <TimelineIcon /> },\r\n  { name: 'About', path: '/about', icon: <InfoIcon /> },\r\n]\r\n\r\nexport default function MiniDrawer({ isOpen, title }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(isOpen);\r\n  const history = useHistory()\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const goTo = (path) => {\r\n    history.push(path)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {Menu.map((menu, index) => <ListItem\r\n            key={index} \r\n            button \r\n            onClick={() => goTo(menu.path)}>\r\n            <ListItemIcon>{menu.icon}</ListItemIcon>\r\n            <ListItemText primary={menu.name} />\r\n          </ListItem>)}\r\n        </List>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Context from '../context';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function CurrentStats() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { store } = useContext(Context)\r\n  \r\n  const totalPage = () => store.pages.length\r\n  const totalLeaks = () => store.leaks.length\r\n\r\n  const goToAnalyze = () => {\r\n    history.push('/analyze')\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item md={12}>\r\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n              Current Stats\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"button\" gutterBottom>\r\n              Total Page Scanned\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"button\" gutterBottom>\r\n              Total Memory Leak Pattern Found\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {totalPage()}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {totalLeaks()}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" onClick={goToAnalyze}>Go to Analyze</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Context from '../context';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WebAppInfo() {\r\n  const classes = useStyles();\r\n  const { store } = useContext(Context)\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Web Apps Information\r\n        </Typography>\r\n        {store.info.icon && <Avatar alt={store.info.title} src={store.info.icon} />}\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {store.info.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          {store.info.url}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          \r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" component=\"a\" href={store.info.url} target=\"_blank\">Go to app</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { Container, Typography, Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../components/miniDrawer'\r\nimport CurrentStats from '../components/currentStats'\r\nimport WebAppInfo from '../components/webAppInfo'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const title = \"Dashboard\"\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Grid container spacing={2}>\r\n        <Grid item md={6}>\r\n          <WebAppInfo />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <CurrentStats />\r\n        </Grid>\r\n      </Grid>\r\n    </main>\r\n  </Container>\r\n}","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../components/miniDrawer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const title = \"About\"\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Typography paragraph>\r\n        My Name is Mojila, you can find me at github.com/mojila <br/>\r\n        I build this app for my final project research. so if you interest to join me develop this app, i'll very welcome. <br/>\r\n        &copy; 2020 \r\n      </Typography>\r\n    </main>\r\n  </Container>\r\n}","import React, { useContext } from 'react'\r\nimport { Container, Card, CardContent, Grid, Typography, CardActions, Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport MiniDrawer from '../../components/miniDrawer'\r\nimport Context from '../../context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  card: {\r\n    title: {\r\n      fontSize: 14\r\n    },\r\n    minWidth: 275,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}))\r\n\r\nexport default function Analyze() {\r\n  const { store } = useContext(Context)\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const title = \"Analyze\"\r\n\r\n  const toDetail = (index) => {\r\n    return history.push(`/analyze/${index}`)\r\n  }\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      {/* content */}\r\n      <Grid container spacing={2}>\r\n        {store.pages.map((d, i) => <Grid key={i} item md={3}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography className={classes.card.title} color=\"textSecondary\" gutterBottom>\r\n                Page URL\r\n              </Typography>\r\n              <Typography>\r\n                {new URL(d).pathname}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\"></Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\" onClick={() => toDetail(i)}>Details</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>)}\r\n      </Grid>\r\n    </main>\r\n  </Container>\r\n}","function detectVariableName(variables) {\r\n  let results = []\r\n\r\n  results = variables.map(d => {\r\n    const removeDeclaration = d.declarationSyntax.replace(/let|const|var/g,'')\r\n    let name = removeDeclaration\r\n    \r\n    if (d.value) {\r\n      name = name.substring(0, name.search(/=/g)).replace(/ /g, '')\r\n    } else {\r\n      name = name.replace(/ /g, '')\r\n    }\r\n\r\n    d.name = name\r\n\r\n    return d\r\n  })\r\n\r\n  return results\r\n}\r\n\r\nfunction detectDataType(variables) {\r\n  let results = []\r\n\r\n  results = variables.map(d => {\r\n    let assignLocation = d.declarationSyntax.search(/=/g)\r\n\r\n    if (assignLocation !== -1) {\r\n      let data = d.declarationSyntax.substring(assignLocation, d.declarationSyntax.length).replace(/[= ]/g,'')\r\n      let value = null\r\n      if (Number(data)) {\r\n        value = Number(data)\r\n        d.typeData = typeof(value)\r\n      } else if (data.search(/['\"`]/g) !== -1) {\r\n        value = String(data).replace(/['\"`]/g, '')\r\n        d.typeData = typeof(value)\r\n      } else if (data.search(/[function]/g) !== -1) {\r\n        value = String(data)\r\n        d.typeData = 'function'\r\n      } else if (data.search(/[{]|[}]/g) !== -1) {\r\n        value = data\r\n        d.typeData = 'object'\r\n      }\r\n\r\n      d.value = value\r\n    }\r\n\r\n    return d\r\n  });\r\n\r\n  return results\r\n}\r\n\r\nfunction searchVariable(code) {\r\n  let results = []\r\n  const variableDatasetRegex = [\r\n    /var [a-zA-Z0-9_ = {a-zA-Z0-9:'\",}']{3,}/g,\r\n    /let [a-zA-Z0-9_ = {a-zA-Z0-9:'\",}']{3,}/g,\r\n    /const [a-zA-Z0-9_ = {a-zA-Z0-9:'\",}']{3,}/g,\r\n  ]\r\n\r\n  variableDatasetRegex.forEach((value, index) => {\r\n    let detectedVariables = code.match(value)\r\n\r\n    if (detectedVariables) {\r\n      results = [...results, ...detectedVariables.map((d) => {\r\n        return {\r\n          declarationSyntax: d,\r\n          name: '',\r\n          typeData: null,\r\n          value: null\r\n        }\r\n      })]\r\n    }\r\n  })\r\n\r\n  // detect data type\r\n  results = detectDataType(results)\r\n  // detect variable name\r\n  results = detectVariableName(results)\r\n\r\n  return results\r\n}\r\n\r\nfunction detectSingleDataType(data) {\r\n  let value = null\r\n  \r\n  if (Number(data)) {\r\n    value = typeof(Number(data))\r\n  } else if (data.search(/['\"`]/g) !== -1) {\r\n    value = typeof(String(data).replace(/['\"`]/g, ''))\r\n  } else if (data.search(/[function]/g) !== -1) {\r\n    value = 'function'\r\n  } else if (data.search(/[{]|[}]/g) !== -1) {\r\n    value = 'object'\r\n  }\r\n\r\n  return value\r\n}\r\n\r\nfunction findArrayPush(code, variables) {\r\n  let results = []\r\n\r\n  let filteredFromDeclarations = code.split('\\n')\r\n  filteredFromDeclarations = filteredFromDeclarations.map(d => {\r\n    let declarations = false\r\n    \r\n    variables.forEach(value => {\r\n      if (d.search(value.declarationSyntax) >= 0) {\r\n        declarations = true\r\n      }\r\n    })\r\n\r\n    if (!declarations) {\r\n      return d\r\n    }\r\n\r\n    return ''\r\n  })\r\n\r\n  results = filteredFromDeclarations.map((d, i) => {\r\n    let problemSyntax = false\r\n\r\n    variables.forEach(value => {\r\n      if (d.search('.push') !== -1) {\r\n        problemSyntax = true\r\n      }\r\n    })\r\n    \r\n    if (!problemSyntax) {\r\n      return 0\r\n    } else {\r\n      return i\r\n    }\r\n  })\r\n  \r\n  return results\r\n}\r\n\r\nfunction detectProblemCode(code, variables) {\r\n  let results = []\r\n\r\n  let filteredFromDeclarations = code.split('\\n')\r\n  filteredFromDeclarations = filteredFromDeclarations.map(d => {\r\n    let declarations = false\r\n    \r\n    variables.forEach(value => {\r\n      if (d.search(value.declarationSyntax) >= 0) {\r\n        declarations = true\r\n      }\r\n    })\r\n\r\n    if (!declarations) {\r\n      return d\r\n    }\r\n\r\n    return ''\r\n  })\r\n\r\n  results = filteredFromDeclarations.map((d, i) => {\r\n    let problemSyntax = false\r\n\r\n    variables.forEach(value => {\r\n      const gex = new RegExp(`(${value.name}+[ +-=])`, 'g')\r\n      if (d.search(gex) !== -1) {\r\n        let data = d.substring(d.search('=') + 1, d.length).replace(/ /g,'')\r\n        \r\n        if (detectSingleDataType(data) !== value.typeData) {\r\n          problemSyntax = true\r\n        }\r\n      }\r\n    })\r\n    \r\n    if (!problemSyntax) {\r\n      return 0\r\n    } else {\r\n      return i\r\n    }\r\n  })\r\n\r\n  results = [...results, ...findArrayPush(code, variables)]\r\n  results = results.filter(x => x !== 0)\r\n\r\n  return results\r\n}\r\n\r\nfunction codeAnalyzer(beautifiedCode) {\r\n  const variablesFound = searchVariable(beautifiedCode)\r\n  const problemCode = detectProblemCode(beautifiedCode, variablesFound)\r\n\r\n  return problemCode\r\n}\r\n\r\nexport default codeAnalyzer","import React, { useState } from 'react'\r\nimport { Box, Typography, Button } from '@material-ui/core'\r\nimport AceEditor from \"react-ace\";\r\nimport codeAnalyzer from '../helpers/codeAnalyzer';\r\n\r\nexport default function CodeReview({ code, scriptNumber }) {\r\n  const [markers, setMarkers] = useState([])\r\n\r\n  const codeAnalyze = () => {\r\n    let newMarkers = codeAnalyzer(code).map(d => ({\r\n      startRow: d,\r\n      endRow: d + 1,\r\n      type: 'text',\r\n      className: 'replacement_marker'\r\n    }))\r\n\r\n    setMarkers(newMarkers)\r\n  }\r\n\r\n  return <React.Fragment>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Box>\r\n          <Typography>\r\n            Code Review #{scriptNumber}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Button variant=\"outlined\" onClick={codeAnalyze}>\r\n            Analyze\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <AceEditor\r\n        mode=\"javascript\"\r\n        theme=\"theme-terminal\"\r\n        width=\"900px\"\r\n        height=\"300px\"\r\n        name=\"UNIQUE_ID_OF_DIV\"\r\n        value={code}\r\n        markers={markers}\r\n        editorProps={{ $blockScrolling: true }}\r\n      />\r\n  </React.Fragment>\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { Container, Card, CardContent, Grid, Typography, CardActions, Button, ListItem, ListItemText, List, ListSubheader, Box } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MiniDrawer from '../../components/miniDrawer'\r\nimport Context, { Actions } from '../../context'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport Chart from \"react-apexcharts\";\r\nimport AceEditor from \"react-ace\";\r\nimport { js_beautify } from 'js-beautify'\r\nimport CodeReview from '../../components/codeReview';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  card: {\r\n    title: {\r\n      fontSize: 14\r\n    },\r\n    minWidth: 275,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  rootList: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    position: 'relative',\r\n    overflow: 'auto',\r\n    maxHeight: 300,\r\n  },\r\n  listSection: {\r\n    backgroundColor: 'inherit',\r\n  },\r\n  ul: {\r\n    backgroundColor: 'inherit',\r\n    padding: 0,\r\n  },\r\n}))\r\n\r\nexport default function DetailAnalyze() {\r\n  const { index } = useParams()\r\n  const { store } = useContext(Context)\r\n  const [loading, setLoading] = useState(true)\r\n  const [selected, setSelected] = useState('')\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const title = \"Analyze\"\r\n  const [chartOptions, setChartOptions] = useState({\r\n    options: {\r\n      chart: {\r\n        id: \"memory-leak\"\r\n      }\r\n    },\r\n    series: []\r\n  })\r\n\r\n  const goBack = () => history.push('/analyze')\r\n  const pageUrl = () => store.pages[index]\r\n  const totalLeaks = () => {\r\n    let pageLeaks = store.page_leaks.filter(x => x.page === pageUrl())[0]\r\n    if (pageLeaks) return pageLeaks.leaks.length\r\n\r\n    return 0\r\n  }\r\n  const getLeaks = () => {\r\n    let pageLeaks = store.page_leaks.filter(x => x.page === pageUrl())[0]\r\n    if (pageLeaks) return pageLeaks.leaks\r\n\r\n    return []\r\n  }\r\n  const getScripts = () => {\r\n    let pageScripts = store.page_scripts.filter(x => x.page === pageUrl())[0]\r\n    if (pageScripts) return pageScripts.scripts.map(d => js_beautify(d))\r\n\r\n    return []\r\n  }\r\n\r\n  const formatTime = (item) => {\r\n    let start = moment(item.memoryLeak[0].time).format('DD/MM/YYYY HH:mm:ss')\r\n    let stop = moment(item.memoryLeak[item.memoryLeak.length - 1].time).format('HH:mm:ss')\r\n\r\n    return `${start} - ${stop}`\r\n  }\r\n\r\n  const onSelectItem = (item) => {\r\n    setSelected(item)\r\n\r\n    let heapData = item.heapData.map((d) => ({ x: moment(d.time).format('HH:mm:ss.S'), y: d.heap }))\r\n    let memoryLeak = item.memoryLeak.map((d) => ({ x: moment(d.time).format('HH:mm:ss.S'), y: d.heap }))\r\n\r\n    return setChartOptions({\r\n      options: {\r\n        chart: {\r\n          id: \"memory-leak\"\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'straight'\r\n        },\r\n        annotations: {\r\n          yaxis: [\r\n            {\r\n              y: memoryLeak[0].y,\r\n              y2: memoryLeak[memoryLeak.length - 1].y,\r\n              borderColor: '#000',\r\n              fillColor: '#FEB019',\r\n              label: {\r\n                text: 'Memory Leak'\r\n              }\r\n            }\r\n          ],\r\n          xaxis: [\r\n            {\r\n              x: memoryLeak[0].x,\r\n              x2: memoryLeak[memoryLeak.length - 1].x,\r\n              fillColor: '#FEB019',\r\n              opacity: 0.4,\r\n              label: {\r\n                borderColor: '#B3F7CA',\r\n                style: {\r\n                  fontSize: '10px',\r\n                  color: '#fff',\r\n                  background: '#00E396',\r\n                }\r\n              },\r\n              text: 'Memory Leak Event Range',\r\n            }\r\n          ]\r\n        },\r\n      }, \r\n      series: [\r\n        {\r\n          type: \"area\",\r\n          name: 'Heap Usage',\r\n          data: heapData,\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // loadLeaks()\r\n    setLoading(false)\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return <Container disableGutters fixed className={classes.root}>\r\n    <MiniDrawer isOpen={true} title={title} />\r\n    { !loading && <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {/* content */}\r\n        <Grid container spacing={2}>\r\n          <Grid item md={3}>\r\n            <Button variant=\"text\" onClick={goBack}>Back</Button>\r\n          </Grid>\r\n          <Grid item md={9} />\r\n          <Grid item md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\">\r\n                  Application Page\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {pageUrl()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\">\r\n                  Memory Leak Detected\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  {totalLeaks()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={3}>\r\n            <Card>\r\n              <CardContent>\r\n              <List className={classes.rootList} subheader={<li />}>\r\n                {getLeaks().map((item, i) => (\r\n                  <ListItem button key={i} onClick={() => onSelectItem(item)}>\r\n                    <ListItemText secondary={formatTime(item)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item md={9}>\r\n            {selected \r\n              ? <Card>\r\n                  <CardContent>\r\n                    <Typography>\r\n                      {formatTime(selected)}\r\n                    </Typography>\r\n                    <Chart\r\n                      type=\"area\"\r\n                      options={chartOptions.options}\r\n                      series={chartOptions.series}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              : <Card>\r\n                  <CardContent>\r\n                    <Typography>\r\n                      Select Memory Leak Event\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>}  \r\n          </Grid>\r\n          <Grid item md={12}>\r\n            <Card>\r\n              <CardContent>\r\n                { getScripts().map((d, i) => <CodeReview key={i} scriptNumber={i+1} code={d} />) }\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </main>\r\n    }\r\n    </Container>\r\n}","import React, { useReducer, useEffect } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Provider, Reducers, Stores, Actions } from './context';\r\n\r\nimport Home from './pages/home';\r\nimport About from './pages/about';\r\nimport Analyze from './pages/analyze';\r\nimport DetailAnalyze from './pages/analyze/_index';\r\n\r\nconst Routes = () => ([\r\n  { component: Home, path: '/' },\r\n  { component: Analyze, path: '/analyze' },\r\n  { component: DetailAnalyze, path: '/analyze/:index' },\r\n  { component: About, path: '/about' },\r\n])\r\n\r\nfunction App() {\r\n  const [store, dispatch] = useReducer(Reducers, Stores)\r\n\r\n  const loadPages = async () => {\r\n    let active = localStorage.getItem('meleak-active')\r\n    if (active) {\r\n      await dispatch({ type: Actions.UPDATE_ACTIVE, payload: { active: active } })\r\n      // load info\r\n      let infoKey = `${active}-info`\r\n      let info = localStorage.getItem(infoKey)\r\n\r\n      if (info) {\r\n        dispatch({ type: Actions.UPDATE_INFO, payload: { info: JSON.parse(info) } })\r\n      }\r\n\r\n      // load pages\r\n      let pagesKey = `${active}-pages`\r\n      let pages = localStorage.getItem(pagesKey)\r\n\r\n      if (pages) {\r\n        await dispatch({ type: Actions.UPDATE_PAGES, payload: { pages: JSON.parse(pages) } })\r\n        let pagesJSON = JSON.parse(pages)\r\n        let pageLeaks = []\r\n        let pageScripts = []\r\n        let memoryLeaks = pagesJSON.map((d) => {\r\n          let leaksKey = `${d}-leak`\r\n          let scriptsKey = `${d}-scripts`\r\n          let leaks = localStorage.getItem(leaksKey)\r\n          let scripts = localStorage.getItem(scriptsKey)\r\n\r\n          if (scripts) {\r\n            pageScripts.push({\r\n              page: d,\r\n              scripts: JSON.parse(scripts)\r\n            })\r\n          }\r\n\r\n          if (leaks) {\r\n            pageLeaks.push({\r\n              page: d,\r\n              leaks: JSON.parse(leaks)\r\n            })\r\n            return JSON.parse(leaks)\r\n          }\r\n\r\n          return []\r\n        }).filter((x) => x).flat()\r\n        await dispatch({ type: Actions.UPDATE_LEAKS, payload: { leaks: memoryLeaks } })\r\n        await dispatch({ type: Actions.UPDATE_PAGE_LEAKS, payload: { page_leaks: pageLeaks } })\r\n        await dispatch({ type: Actions.UPDATE_PAGE_SCRIPTS, payload: { page_scripts: pageScripts } })\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadPages()\r\n  }, [])\r\n\r\n  return (\r\n    <Provider value={{ store, dispatch }}>\r\n      <CssBaseline>\r\n        <HashRouter\r\n          basename=\"/\"\r\n        >\r\n          <Switch>\r\n            {Routes().map((route, index) => <Route exact key={index} component={route.component} path={route.path} />)}\r\n          </Switch>\r\n        </HashRouter>\r\n      </CssBaseline>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'typeface-roboto';\r\nimport 'ace-builds/src-noconflict/mode-javascript'\r\nimport 'ace-builds/src-noconflict/theme-terminal'\r\nimport './styles/global.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}