{"version":3,"sources":["stores/ControlStore.js","stores/CurrentHeapStore.js","stores/ChartStore.js","stores/pageStore.js","stores/index.js","actions/ControlActions.js","actions/CurrentHeapAction.js","actions/PageActions.js","actions/index.js","reducers/index.js","context/index.js","components/actionControl.js","components/currentHeapUsed.js","components/currentHeapTotal.js","components/memoryLeakCount.js","components/chart.js","components/title.js","App.js","serviceWorker.js","index.js"],"names":["control","active","currentHeap","usedHeap","totalHeap","chart","heapData","max","performance","memory","jsHeapSizeLimit","page","memoryLeak","stores","controlActions","START","STOP","currentHeapActions","UPDATE_HEAP","pageActions","CHANGE_PAGE","UPDATE_COUNT","actions","Reducer","state","action","type","payload","Context","React","createContext","Provider","Stores","Consumer","store","Reducers","reducer","useStyles","makeStyles","_theme","paper","padding","ActionControl","useContext","dispatch","classes","attachDebugger","tabs","a","chrome","runtime","sendMessage","detachDebugger","tabId","id","stop","query","start","checkActivation","msg","useEffect","Paper","className","Grid","container","item","xs","Typography","variant","color","Box","display","justifyContent","Button","size","onClick","CurrentHeapUsed","toFixed","CurrentHeapTotal","MemoryLeakCount","startIcon","fullWidth","url","getURL","link","document","createElement","target","href","click","toDashboard","Chart","options","toolbar","show","plotOptions","bar","columnWidth","endingShape","stroke","width","markers","strokeWidth","fillOpacity","strokeOpacity","hover","series","name","data","height","Title","commands","App","onMessage","addListener","_sender","_sendResponse","commandReceiver","spacing","Boolean","window","location","hostname","match","Index","useReducer","value","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e60ce552.chunk.js","sourcesContent":["const control = {\r\n  active: false\r\n}\r\n\r\nexport default control","const currentHeap = {\r\n  usedHeap: 0,\r\n  totalHeap: 0\r\n}\r\n\r\nexport default currentHeap","const chart = {\r\n  heapData: [],\r\n  max: 2000\r\n}\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  chart.heapData = [{\r\n    x: 1,\r\n    y: 200\r\n  },{\r\n    x: 2,\r\n    y: 210\r\n  }]\r\n} else {\r\n  chart.max = performance.memory.jsHeapSizeLimit / 1000000\r\n}\r\n\r\nexport default chart","const page = {\r\n  page: '/',\r\n  memoryLeak: 0\r\n}\r\n\r\nexport default page","import control from './ControlStore'\r\nimport currentHeap from './CurrentHeapStore'\r\nimport chart from './ChartStore'\r\nimport page from './pageStore'\r\n\r\nconst stores = {\r\n  ...control,\r\n  ...currentHeap,\r\n  ...chart,\r\n  ...page\r\n}\r\n\r\nexport default stores","const controlActions = {\r\n  START: 'START',\r\n  STOP: 'STOP',\r\n}\r\n\r\nexport default controlActions","const currentHeapActions = {\r\n  UPDATE_HEAP: 'UPDATE_HEAP'\r\n}\r\n\r\nexport default currentHeapActions","const pageActions = {\r\n  CHANGE_PAGE: 'CHANGE_PAGE',\r\n  UPDATE_COUNT: 'UPDATE_COUNT'\r\n}\r\n\r\nexport default pageActions","import controlActions from './ControlActions'\r\nimport currentHeapActions from './CurrentHeapAction'\r\nimport pageActions from './PageActions'\r\n\r\nconst actions = {\r\n  ...controlActions,\r\n  ...currentHeapActions,\r\n  ...pageActions\r\n}\r\n\r\nexport default actions","import stores from \"../stores\";\r\nimport actions from \"../actions\";\r\n\r\nconst Reducer = (state = stores, action) => {\r\n  switch (action.type) {\r\n    case actions.START:\r\n      return {\r\n        ...state,\r\n        active: true\r\n      }\r\n    case actions.STOP:\r\n      return {\r\n        ...state,\r\n        active: false\r\n      }\r\n    case actions.UPDATE_HEAP:\r\n      return {\r\n        ...state,\r\n        usedHeap: action.payload.usedHeap,\r\n        totalHeap: action.payload.totalHeap,\r\n        heapData: action.payload.heapData\r\n      }\r\n    case actions.CHANGE_PAGE:\r\n      return {\r\n        ...state,\r\n        page: action.payload.page\r\n      }\r\n    case actions.UPDATE_COUNT:\r\n      return {\r\n        ...state,\r\n        memoryLeak: action.payload.memoryLeak\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Reducer","import React from 'react'\r\nimport store from '../stores'\r\nimport reducer from '../reducers'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport const Provider = Context.Provider\r\nexport const Consumer = Context.Consumer\r\nexport const Stores = store\r\nexport const Reducers = reducer\r\n\r\nexport default Context\r\n","/*eslint-disable no-undef*/\r\nimport React, { useEffect, useContext } from 'react'\r\nimport { Paper, Button, makeStyles, Box, Typography, Grid } from '@material-ui/core'\r\nimport Context from '../context'\r\nimport actions from '../actions'\r\n\r\nconst useStyles = makeStyles((_theme) => ({\r\n  paper: {\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst ActionControl = () => {\r\n  const { store, dispatch } = useContext(Context)\r\n\r\n  const classes = useStyles()\r\n\r\n  const attachDebugger = async (tabs) => {\r\n    await chrome.runtime.sendMessage({ action: 'attach_debugger', payload: tabs[0] })\r\n    dispatch({ type: actions.START })\r\n  }\r\n\r\n  const detachDebugger = async (tabs) => {\r\n    await chrome.runtime.sendMessage({ action: 'detach_debugger', payload: { tabId: tabs[0].id } })\r\n    dispatch({ type: actions.STOP })\r\n  }\r\n\r\n  const stop = async () => {\r\n    await chrome.tabs.query({ active: true }, detachDebugger)\r\n  }\r\n\r\n  const start = async () => {\r\n    await chrome.tabs.query({ active: true }, attachDebugger)\r\n  }\r\n\r\n  const checkActivation = async () => {\r\n    chrome.runtime.sendMessage({ action: 'is_attached_debugger' }, (msg) => {\r\n      if (msg) {\r\n        dispatch({ type: actions.START })\r\n      } else {\r\n        dispatch({ type: actions.STOP })\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      // eslint-disable-next-line\r\n      checkActivation()\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\">\r\n            Meleak\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Box display=\"flex\" justifyContent=\"flex-end\">\r\n            {\r\n              store.active\r\n                ? <Button size=\"small\" variant=\"outlined\" onClick={stop}>Stop</Button>\r\n                : <Button size=\"small\" variant=\"outlined\" onClick={start}>Start</Button>\r\n            }\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default ActionControl\r\n/*eslint-enable no-undef*/","import React, { useContext } from 'react'\r\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\r\nimport Context from '../context'\r\n\r\nconst useStyles = makeStyles((_theme) => ({\r\n  paper: {\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst CurrentHeapUsed = () => {\r\n  const classes = useStyles()\r\n  const { store } = useContext(Context)\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"button\">Used Heap: { (store.usedHeap / 1000000).toFixed(2) } Mb</Typography>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CurrentHeapUsed","import React, { useContext } from 'react'\r\nimport { Paper, Typography, makeStyles } from '@material-ui/core'\r\nimport Context from '../context'\r\n\r\nconst useStyles = makeStyles((_theme) => ({\r\n  paper: {\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nconst CurrentHeapTotal = () => {\r\n  const classes = useStyles()\r\n  const { store } = useContext(Context)\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"button\">Total Heap: { (store.totalHeap / 1000000).toFixed(2) } Mb</Typography>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default CurrentHeapTotal","/* eslint-disable no-undef */\r\nimport React, { useContext } from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport Context from '../context';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\n\r\nexport default function MemoryLeakCount() {\r\n  const { store } = useContext(Context)\r\n\r\n  const toDashboard = () => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      let url = chrome.runtime.getURL('option/index.html')\r\n\r\n      let link = document.createElement(\"a\");\r\n      link.target = \"_blank\";\r\n      link.href = `${url}`;\r\n      return link.click();\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<TrackChangesIcon />}\r\n      color=\"secondary\"\r\n      fullWidth\r\n      onClick={() => toDashboard()}\r\n    >\r\n      Memory Leak Detected in this Page ({store.memoryLeak})\r\n    </Button>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport Context from '../context'\r\nimport ApexChart from 'react-apexcharts'\r\n\r\nconst Chart = () => {\r\n  const { store } = useContext(Context)\r\n\r\n  const generateOptionsMixedChart = () => ({\r\n    chart: {\r\n      id: \"basic-bar\",\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: \"50%\",\r\n        endingShape: \"arrow\"\r\n      }\r\n    },\r\n    stroke: {\r\n      width: [2, 0, 0]\r\n    },\r\n    markers: {\r\n      size: 6,\r\n      strokeWidth: 3,\r\n      fillOpacity: 0,\r\n      strokeOpacity: 0,\r\n      hover: {\r\n        size: 8\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <ApexChart \r\n      type=\"line\" \r\n      options={generateOptionsMixedChart()}\r\n      series={[\r\n        {\r\n          name: \"Used Heap\",\r\n          type: \"line\",\r\n          data: store.heapData\r\n        },\r\n      ]}\r\n      width={500}\r\n      height={240}\r\n    >\r\n    </ApexChart>\r\n  )\r\n}\r\n\r\nexport default Chart","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { Grid, Box, Typography, makeStyles, Paper } from '@material-ui/core'\r\nimport Context from '../context'\r\n\r\nconst useStyles = makeStyles((_theme) => ({\r\n  paper: {\r\n    padding: 8\r\n  }\r\n}))\r\n\r\nfunction Title() {\r\n  const { store } = useContext(Context)\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <Typography variant=\"button\" color=\"textSecondary\">\r\n          Current Stats - Page ({ store.page })\r\n        </Typography>\r\n      </Box>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Title","/*eslint-disable no-undef*/\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { Grid } from '@material-ui/core'\r\nimport ActionControl from './components/actionControl';\r\nimport CurrentHeapUsed from './components/currentHeapUsed';\r\nimport CurrentHeapTotal from './components/currentHeapTotal';\r\nimport MemoryLeakCount from './components/memoryLeakCount';\r\nimport Context from './context';\r\nimport actions from './actions';\r\nimport Chart from './components/chart';\r\nimport Title from './components/title';\r\n\r\nconst commands = {\r\n  updateHeap: 'update_heap'\r\n}\r\n\r\nfunction App() {\r\n  const { dispatch } = useContext(Context)\r\n\r\n  const commandReceiver = (action, payload) => {\r\n    switch(action) {\r\n      case commands.updateHeap:\r\n        let { usedHeap, totalHeap, heapData, page, memoryLeak } = payload\r\n        dispatch({ type: actions.CHANGE_PAGE, payload: { page } })\r\n        dispatch({ type: actions.UPDATE_COUNT, payload: { memoryLeak } })\r\n        return dispatch({ type: actions.UPDATE_HEAP, payload: { usedHeap, totalHeap, heapData } })\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === 'production') {\r\n      chrome.runtime.onMessage.addListener(({ action, payload }, _sender, _sendResponse) => {\r\n        commandReceiver(action, payload)\r\n      })\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}>\r\n        <ActionControl />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Title />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrentHeapUsed />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <CurrentHeapTotal />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Chart />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MemoryLeakCount />\r\n      </Grid>\r\n    </Grid>\r\n  );  \r\n}\r\n\r\nexport default App;\r\n/*eslint-enable no-undef*/","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useReducer } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-roboto';\r\nimport './index.css'\r\nimport { Provider, Reducers, Stores } from './context';\r\n\r\nconst Index = () => {\r\n  const [store, dispatch] = useReducer(Reducers, Stores)\r\n\r\n  return (\r\n    <Provider value={{ store, dispatch }}>\r\n      <App />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Index />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}